name: Integration Tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * sun'

jobs:
  tests:
    name: Run integration tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: database_ci
          MYSQL_USER: user
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: secretroot
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2.3.3

      - name: Setup PHP with pecl extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: pecl, php-cs-fixer, phpunit, composer:v2
          extensions: swoole, fileinfo, gmp, intl, json, mbstring, openssl, dom, curl, libxml, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: pcov

      - name: Verify MySQL connection
        run: |
          mysql --version
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uuser -psecret -e "SHOW DATABASES"

      - name: Cache composer dependencies
        uses: actions/cache@v2.1.1
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: Install dependencies
        run: |
          php --version
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
          npm install
          npm run production

      - name: Boot application
        run: |
          cp .env.github .env
          php artisan key:generate
          php artisan --version

      - name: Migrate database
        run: |
          mysql --version
          php artisan migrate:fresh

      - name: Cache yarn dependencies
        uses: actions/cache@v2.1.1
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}

      - name: Run yarn
        run: |
          yarn --version
          yarn && yarn dev

      - name: Run tests
        run: ./vendor/bin/phpunit --verbose

      - name: Run security checks
        run: |
          test -d security-checker || git clone https://github.com/sensiolabs/security-checker.git
          cd security-checker
          composer install
          php security-checker security:check ../composer.lock

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: Logs
          path: ./storage/logs
